/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from "./routes/__root"
import { Route as NRouteImport } from "./routes/n/route"
import { Route as ARouteImport } from "./routes/a/route"
import { Route as IndexImport } from "./routes/index"
import { Route as XIndexImport } from "./routes/x/index"
import { Route as AIndexImport } from "./routes/a/index"
import { Route as XYImport } from "./routes/x/y"
import { Route as NNnImport } from "./routes/n/nn"
import { Route as ABImport } from "./routes/a/b"
import { Route as ACRouteImport } from "./routes/a/_c/route"
import { Route as ACBbImport } from "./routes/a/_c/bb"
import { Route as ACAaImport } from "./routes/a/_c/aa"
import { Route as AdP1Import } from "./routes/a/(d)/p1"
import { Route as AdFffRouteImport } from "./routes/a/(d)/fff/route"
import { Route as AdFffIndexImport } from "./routes/a/(d)/fff/index"
import { Route as AdFffGggImport } from "./routes/a/(d)/fff/ggg"

// Create/Update Routes

const NRouteRoute = NRouteImport.update({
  path: "/n",
  getParentRoute: () => rootRoute,
} as any)

const ARouteRoute = ARouteImport.update({
  path: "/a",
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: "/",
  getParentRoute: () => rootRoute,
} as any)

const XIndexRoute = XIndexImport.update({
  path: "/x/",
  getParentRoute: () => rootRoute,
} as any)

const AIndexRoute = AIndexImport.update({
  path: "/",
  getParentRoute: () => ARouteRoute,
} as any)

const XYRoute = XYImport.update({
  path: "/x/y",
  getParentRoute: () => rootRoute,
} as any)

const NNnRoute = NNnImport.update({
  path: "/nn",
  getParentRoute: () => NRouteRoute,
} as any)

const ABRoute = ABImport.update({
  path: "/b",
  getParentRoute: () => ARouteRoute,
} as any)

const ACRouteRoute = ACRouteImport.update({
  id: "/_c",
  getParentRoute: () => ARouteRoute,
} as any)

const ACBbRoute = ACBbImport.update({
  path: "/bb",
  getParentRoute: () => ACRouteRoute,
} as any)

const ACAaRoute = ACAaImport.update({
  path: "/aa",
  getParentRoute: () => ACRouteRoute,
} as any)

const AdP1Route = AdP1Import.update({
  path: "/p1",
  getParentRoute: () => ARouteRoute,
} as any)

const AdFffRouteRoute = AdFffRouteImport.update({
  path: "/fff",
  getParentRoute: () => ARouteRoute,
} as any)

const AdFffIndexRoute = AdFffIndexImport.update({
  path: "/",
  getParentRoute: () => AdFffRouteRoute,
} as any)

const AdFffGggRoute = AdFffGggImport.update({
  path: "/ggg",
  getParentRoute: () => AdFffRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module "@tanstack/react-router" {
  interface FileRoutesByPath {
    "/": {
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    "/a": {
      preLoaderRoute: typeof ARouteImport
      parentRoute: typeof rootRoute
    }
    "/n": {
      preLoaderRoute: typeof NRouteImport
      parentRoute: typeof rootRoute
    }
    "/a/_c": {
      preLoaderRoute: typeof ACRouteImport
      parentRoute: typeof ARouteImport
    }
    "/a/b": {
      preLoaderRoute: typeof ABImport
      parentRoute: typeof ARouteImport
    }
    "/n/nn": {
      preLoaderRoute: typeof NNnImport
      parentRoute: typeof NRouteImport
    }
    "/x/y": {
      preLoaderRoute: typeof XYImport
      parentRoute: typeof rootRoute
    }
    "/a/": {
      preLoaderRoute: typeof AIndexImport
      parentRoute: typeof ARouteImport
    }
    "/x/": {
      preLoaderRoute: typeof XIndexImport
      parentRoute: typeof rootRoute
    }
    "/a/(d)/fff": {
      preLoaderRoute: typeof AdFffRouteImport
      parentRoute: typeof ARouteImport
    }
    "/a/(d)/p1": {
      preLoaderRoute: typeof AdP1Import
      parentRoute: typeof ARouteImport
    }
    "/a/_c/aa": {
      preLoaderRoute: typeof ACAaImport
      parentRoute: typeof ACRouteImport
    }
    "/a/_c/bb": {
      preLoaderRoute: typeof ACBbImport
      parentRoute: typeof ACRouteImport
    }
    "/a/(d)/fff/ggg": {
      preLoaderRoute: typeof AdFffGggImport
      parentRoute: typeof AdFffRouteImport
    }
    "/a/(d)/fff/": {
      preLoaderRoute: typeof AdFffIndexImport
      parentRoute: typeof AdFffRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexRoute,
  ARouteRoute.addChildren([
    ACRouteRoute.addChildren([ACAaRoute, ACBbRoute]),
    ABRoute,
    AIndexRoute,
    AdFffRouteRoute.addChildren([AdFffGggRoute, AdFffIndexRoute]),
    AdP1Route,
  ]),
  NRouteRoute.addChildren([NNnRoute]),
  XYRoute,
  XIndexRoute,
])

/* prettier-ignore-end */
